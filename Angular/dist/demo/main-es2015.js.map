{"version":3,"sources":["./src/app/shared/oesterreichimpft.service.ts","./src/app/shared/vaccinations.ts","./src/app/vaccinedate-list-item/vaccinedate-list-item.component.html","./src/app/vaccinedate-form/vaccinedate-form-error-messages.ts","./src/app/home/home.component.ts","./src/app/vaccinedate-form/vaccinedate-form.component.html","./src/app/vaccinedate-form/vaccinedate-form.component.ts","./src/app/vaccinedate-form/vaccinedate-form.component.css","./src/app/shared/token-interceptor.service.ts","./src/app/app.component.ts","./src/app/shared/vaccinedate-factory.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/vaccinedate.ts","./src/$_lazy_route_resource lazy namespace object","./src/polyfills.ts","./src/app/login/login.component.html","./src/app/shared/authentication.service.ts","./src/app/login/login.component.css","./src/app/vaccinedate-list/vaccinedate-list.component.ts","./src/app/vaccinedate-list-item/vaccinedate-list-item.component.ts","./src/app/vaccinedate-details/vaccinedate-details.component.ts","./src/app/shared/UserPivot.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/vaccinedate-list/vaccinedate-list.component.html","./src/app/vaccinedate-details/vaccinedate-details.component.html","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Vaccinedate } from \"./vaccinedate\";\nimport { Vaccinelocation } from \"./vaccinelocation\";\nimport { Vaccinations } from \"./vaccinations\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry, map } from 'rxjs/operators';\nimport { User } from './user';\nimport { UserPivot } from './UserPivot';\n\n@Injectable()\nexport class OesterreichimpftService {\n\n  private api = 'https://oesterreichimpft.s1810456016.student.kwmhgb.at/api';\n\n  constructor(private http: HttpClient) { }\n\n  getAllDates(): Observable<Array<Vaccinedate>> {\n    // returns an Observable on which you can register to get data\n    return this.http.get(`\n    ${this.api}/vaccinedates`)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));\n  }\n\n  getAllLocations(): Observable<Array<Vaccinelocation>> {\n    return this.http.get(`\n   ${this.api}/vaccinelocations`)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));\n  }\n\n  getSingleDate(id: number): Observable<Vaccinedate> {\n    return this.http.get(`${this.api}/vaccinedate/${id}`)\n      .pipe(retry(3))\n      .pipe(map<any, Vaccinedate>(res => {\n        let startTime = new Date(res.starttime);\n        let endTime = new Date(res.endtime); \n\n        let userTimezoneOffset = startTime.getTimezoneOffset() * 60000;\n        startTime = new Date(startTime.getTime() - userTimezoneOffset);\n        endTime = new Date(endTime.getTime() - userTimezoneOffset);\n\n        return new Vaccinedate(res.id, new Date(res.day), startTime, endTime, res.maximum_attendees, res.vaccinations);\n      }))\n      .pipe(catchError(this.errorHandler));\n  }\n\n  getSingleLocation(id: number): Observable<Vaccinelocation> {\n    return this.http.get(`\n    ${this.api}/vaccinelocation/${id}`)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));\n  }\n\n  removeDate(id: number): Observable<any> {\n    return this.http.delete(`${this.api}/vaccinedate/${id}`)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));\n  }\n\n  createDate(vaccinedate: Vaccinedate): Observable<any> {\n    return this.http.post(`${this.api}/vaccinedate`, vaccinedate)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));\n  }\n\n  createVaccination(vaccination: Vaccinations): Observable<any> {\n    return this.http.post(`${this.api}/vaccination`, vaccination)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));\n  }\n\n  updateDate(vaccinedate: Vaccinedate): Observable<any> {\n    return this.http.put(`${this.api}/vaccinedate/${vaccinedate.id}`, vaccinedate);\n  }\n\n  updateVaccination(vaccination: Vaccinations): Observable<any> {\n    return this.http.put(`${this.api}/vaccination/${vaccination.id}`, vaccination)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));\n  }\n\n  registerToVaccination(userPivot: UserPivot): Observable<any> {\n    return this.http.post(`${this.api}/vaccinationUser`, userPivot)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));\n  }\n\n  getUsersByLocationAndDate(dateid: number, locid: number): Observable<User[]> {\n    return this.http.get(`${this.api}/vaccineuser/${dateid}/${locid}`)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));  \n  }\n\n  vaccinationAdministered(vaccineuser: User): Observable<any> {\n    return this.http.put(`${this.api}/vaccineuser/${vaccineuser.id}`, vaccineuser)\n      .pipe(retry(3)).pipe(catchError(this.errorHandler));  \n  }\n\n  private errorHandler(error: Error | any): Observable<any> {\n    return throwError(error);\n  }\n\n\n\n\n}\n","export class Vaccinations {\n    constructor(\n        public id: number,\n        public vaccinelocation_id: number,\n        public vaccinedate_id: number){\n    }\n}\n","export default \"<div class=\\\"content\\\">\\n    <div class=\\\"header\\\">\\n        <i class=\\\"calendar alternate icon\\\"></i> {{ vaccinedate.day | date:'dd.MM.yyyy' }} | <i class=\\\"clock icon\\\"></i>{{ vaccinedate.starttime | date:'HH:mm' }} - {{ vaccinedate.endtime | date:'HH:mm' }}\\n    </div>\\n    <div class=\\\"description\\\" style=\\\"margin-top: 0.5em;\\\">\\n        <i class=\\\"map pin icon\\\"></i> {{ vaccinedate.city }} - {{ vaccinedate.description }}\\n    </div>\\n    <div style=\\\"margin-top: 1em; border-bottom: 0.1em solid lightgrey;\\\"></div>\\n</div>\";","export class ErrorMessage {\n    constructor(\n        public forControl: string,\n        public forValidator: string,\n        public text: string\n    ){}\n}\n\nexport const VaccinedateFormErrorMessages = [\n    new ErrorMessage('maximum_attendees', 'required', 'Die maximale Teilnehmeranzahl muss angegeben werden!'),\n    new ErrorMessage('maximum_attendees', 'min', 'Die minimale Teilnehmeranzahl ist 1!'),\n    new ErrorMessage('maximum_attendees', 'max', 'Die maximale Teilnehmeranzahl ist 200!'),\n    new ErrorMessage('starttime', 'required', 'Die Startzeit des Impftermins muss angegeben werden!'),\n    new ErrorMessage('endtime', 'required', 'Die Endzeit des Impftermins muss angegeben werden!'),\n    new ErrorMessage('day', 'required', 'Der Impftag muss angegeben werden!')\n]","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../shared/authentication.service';\n\n@Component({\n  selector: 'app-home',\n  template: `\n  <div class=\"ui center aligned container\">\n  <h2 class=\"ui center aligned icon header\">\n  <i class=\"circular syringe icon\"></i>\n  Österreich impft\n</h2>\n<div class=\"content\">Willkommen zu Österreich impft. Sie können sich hier für eine Impfung anmelden.</div>\n    <button style=\"margin-top: 1em;\" [routerLink]=\"'/vaccinedates'\" textAlign=\"center\" class=\"ui basic button\"><i class=\"icon list\"></i>Zu der Terminliste</button>\n      </div>\n  `,\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  private authService: AuthenticationService\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<div class=\\\"ui container\\\">\\n    <h1>Termin Formular</h1>\\n    <form class=\\\"ui large form\\\" [formGroup]=\\\"vaccinedateForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\n\\n        <input type=\\\"hidden\\\" name=\\\"id\\\">\\n        <div class=\\\"field\\\">\\n            <label>Termin-Datum</label>\\n            <input formControlName=\\\"day\\\" type=\\\"date\\\"  id=\\\"day\\\" />\\n            <div *ngIf=\\\"errors.day\\\" class=\\\"ui pointing red basic label\\\">{{ errors.day }}</div>\\n        </div>\\n\\n        <div class=\\\"field\\\">\\n            <label>Startzeit</label>\\n            <input type=\\\"time\\\" formControlName=\\\"starttime\\\" name=\\\"starttime\\\"> \\n            <div *ngIf=\\\"errors.starttime\\\" class=\\\"ui pointing red basic label\\\">{{ errors.starttime }}</div>\\n        </div>\\n\\n        <div class=\\\"field\\\">\\n            <label>Endzeit</label>\\n            <input type=\\\"time\\\" formControlName=\\\"endtime\\\" name=\\\"endtime\\\">\\n            <div *ngIf=\\\"errors.endtime\\\" class=\\\"ui pointing red basic label\\\">{{ errors.endtime }}</div>\\n        </div>\\n\\n        <div class=\\\"field\\\">\\n            <label>Maximale Teilnehmeranzahl</label>\\n            <input type=\\\"number\\\" formControlName=\\\"maximum_attendees\\\">\\n            <div *ngIf=\\\"errors.maximum_attendees\\\" class=\\\"ui pointing red basic label\\\">{{ errors.maximum_attendees }}\\n            </div>\\n        </div>\\n\\n        <div class=\\\"field\\\">\\n            <label>Impfort</label>\\n            <select class=\\\"custom-select\\\" [(ngModel)]=\\\"selectedLocation\\\" formControlName=\\\"vaccinelocation\\\">\\n                <option *ngFor=\\\"let vaccinelocation of vaccinelocations\\\" [ngValue]=\\\"vaccinelocation\\\">\\n                    {{ vaccinelocation.city }}\\n                </option>\\n            </select>\\n        </div>\\n\\n\\n        <button type=\\\"submit\\\" class=\\\"ui button\\\" [disabled]=\\\"vaccinedateForm.invalid\\\">Speichern</button>\\n    </form>\\n</div>\";","import { ActivatedRoute, Router } from \"@angular/router\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, FormArray, Validators, FormControl } from \"@angular/forms\";\nimport { VaccinedateFactory } from '../shared/vaccinedate-factory';\nimport { OesterreichimpftService } from \"../shared/oesterreichimpft.service\";\nimport { VaccinedateFormErrorMessages } from './vaccinedate-form-error-messages';\nimport { Vaccinedate } from \"../shared//vaccinedate\";\nimport { Vaccinelocation } from \"../shared//vaccinelocation\";\nimport { Vaccinations } from \"../shared//vaccinations\";\n\n@Component({\n  selector: 'app-vaccinedate-form',\n  templateUrl: './vaccinedate-form.component.html',\n  styleUrls: ['./vaccinedate-form.component.css']\n})\nexport class VaccinedateFormComponent implements OnInit {\n\n  vaccinedateForm: FormGroup;\n  vaccinedate = VaccinedateFactory.empty();\n  vaccinelocations = [];\n  selectedVaccinelocation: Vaccinelocation;\n  isUpdatingVaccinedate = false;\n  errors: { [key: string]: string } = {};\n  selectedLocation;\n\n  constructor(\n    private fb: FormBuilder,\n    private vc: OesterreichimpftService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    const dateid = this.route.snapshot.params[\"dateid\"];\n    const locid = this.route.snapshot.params[\"locid\"];\n\n    if (dateid && locid) {\n      this.isUpdatingVaccinedate = true;\n\n      this.vc.getSingleDate(dateid).subscribe(vaccinedate => {\n        this.vaccinedate = vaccinedate;\n        if (this.vaccinelocations.length != 0)\n          this.initVaccinedate();\n      });\n      \n      this.vc.getAllLocations().subscribe(locations => {\n        this.vaccinelocations = locations;\n        for(const loc of this.vaccinelocations){\n          if (loc.id == locid) {\n            this.selectedVaccinelocation = loc;\n          }\n        }\n\n\n        if (this.vaccinedate != null)\n          this.initVaccinedate();\n      });\n    } else {\n      this.vc.getAllLocations().subscribe(locations => {\n        this.vaccinelocations = locations;\n      });\n    }\n    this.initVaccinedate();\n  }\n\n  initVaccinedate() {\n    this.vaccinedateForm = this.fb.group({\n      id: this.vaccinedate.id,\n      day: [this.vaccinedate.day?.toISOString()?.substring(0, 10), Validators.required],\n      starttime: [this.vaccinedate?.starttime?.toISOString().substring(11,16), Validators.required],\n      endtime: [this.vaccinedate.endtime?.toISOString()?.substring(11,16), Validators.required],\n      maximum_attendees: [this.vaccinedate.maximum_attendees, [Validators.required, Validators.min(1), Validators.max(200)]],\n      vaccinelocation: this.selectedVaccinelocation \n    });\n\n    this.vaccinedateForm.statusChanges.subscribe(() =>\n      this.updateErrorMessages());\n  }\n\n  submitForm() {\n    // Formularfelder auf Objekt mappen durch fromObject in VaccinedateFactory\n    const vaccinedate: Vaccinedate = VaccinedateFactory.fromObject(this.vaccinedateForm.value);\n\n    if (this.isUpdatingVaccinedate) {\n      this.vc.updateDate(vaccinedate).subscribe(res => {\n        const vac = new Vaccinations(this.vaccinedate.vaccinations[0].id, this.vaccinedateForm.value.vaccinelocation.id, vaccinedate.id);\n\n        this.vc.updateVaccination(vac).subscribe(res => {\n          this.router.navigate([\"../../vaccinedates\", vaccinedate.id, this.vaccinedateForm.value.vaccinelocation.id]), {\n            relativeto: this.route\n          }\n        })\n      });\n    } else {\n      // console.log(vaccinedate);\n      this.vc.createDate(vaccinedate).subscribe(res => {\n        const vac = new Vaccinations(null, this.vaccinedateForm.value.vaccinelocation.id, res.id);\n        this.vc.createVaccination(vac).subscribe(res => {\n          this.vaccinedate = VaccinedateFactory.empty();\n          this.vaccinedateForm.reset(VaccinedateFactory.empty());\n          this.router.navigate([\"../vaccinedates\"]), {\n            relativeto: this.route\n          }\n        });\n      },\n        err => {\n          console.log(\"Fehler ist passiert\", err)\n        })\n    }\n  }\n\n  updateErrorMessages() {\n    // console.log('form invalid?' + this.vaccinedateForm.invalid);\n\n    this.errors = {};\n\n    for (const message of VaccinedateFormErrorMessages) {\n      const control = this.vaccinedateForm.get(message.forControl);\n      if (\n        control &&\n        control.dirty &&\n        control.invalid &&\n        control.errors[message.forValidator] &&\n        !this.errors[message.forControl]\n      ) {\n        this.errors[message.forControl] = message.text;\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2YWNjaW5lZGF0ZS1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\";","import { HttpHandler, HttpInterceptor, HttpRequest, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> { \n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${sessionStorage.getItem('token')}`\n      }\n    });\n    return next.handle(request);\n  }\n}\n","import { Component, VERSION } from '@angular/core';\nimport { AuthenticationService } from './shared/authentication.service';\nimport { Vaccinedate } from './shared/vaccinedate';\n\n@Component({\n  selector: 'vc-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent  {\n  constructor(private authService : AuthenticationService){}\n    isLoggedIn(){\n      return this.authService.isLoggedIn();\n    }\n\n    getInfoIfAdmin(){\n      return this.authService.getInfoIfAdmin();\n    }\n\n    getLoginLabel(){\n      return this.isLoggedIn() ? \"Logout\" : \"Login\";\n    }\n  }\n","import { DatePipe } from '@angular/common';\nimport { Vaccinedate } from './vaccinedate';\n\nexport class VaccinedateFactory {\n    static empty(): Vaccinedate {\n        return new Vaccinedate(null, null, null, null, null, []);\n    }\n\n    static fromObject(rawVaccinedate: any) : Vaccinedate {\n        const vaccinedate: Vaccinedate = new Vaccinedate( \n            rawVaccinedate.id,\n            typeof(rawVaccinedate.day) === 'string' ? new Date(rawVaccinedate.day) : rawVaccinedate.day,\n            typeof(rawVaccinedate.starttime) === 'string' ? new Date(rawVaccinedate.day + \" \" + rawVaccinedate.starttime) : rawVaccinedate.starttime,\n            typeof(rawVaccinedate.endtime) === 'string' ? new Date(rawVaccinedate.day + \" \" + rawVaccinedate.endtime) : rawVaccinedate.endtime,\n            rawVaccinedate.maximum_attendees,\n            rawVaccinedate.vaccinations\n        );\n        \n        // to remove timezone from date object\n        let userTimezoneOffset = vaccinedate.starttime.getTimezoneOffset() * 60000;\n        vaccinedate.starttime = new Date(vaccinedate.starttime.getTime() - userTimezoneOffset);\n        vaccinedate.endtime = new Date(vaccinedate.endtime.getTime() - userTimezoneOffset);\n\n        return vaccinedate;\n    }\n}\n","export default \"<!-- externes Template für Start-Komponente -->\\n<div class=\\\"ui {{ isLoggedIn() && getInfoIfAdmin() == '1' ? 'four' : 'three' }} item secondary pointing menu\\\">\\n    <a routerLink=\\\"home\\\" routerLinkActive=\\\"active\\\" class=\\\"item\\\">Home</a>\\n    <a routerLink=\\\"vaccinedates\\\" routerLinkActive=\\\"active\\\" class=\\\"item\\\">Liste der Impftermine</a>\\n    <a *ngIf=\\\"isLoggedIn() && getInfoIfAdmin() == '1'\\\" routerLink=\\\"admin\\\" routerLinkActive=\\\"active\\\" class=\\\"item\\\">Adminbereich</a>\\n\\n    <a routerLink=\\\"login\\\" routerLinkActive=\\\"active\\\" class=\\\"item\\\">{{ getLoginLabel() }}</a>\\n</div>\\n<router-outlet></router-outlet>\";","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { VaccinedateListComponent } from './vaccinedate-list/vaccinedate-list.component';\nimport { VaccinedateListItemComponent } from './vaccinedate-list-item/vaccinedate-list-item.component';\nimport { VaccinedateDetailsComponent } from './vaccinedate-details/vaccinedate-details.component';\n\nimport { OesterreichimpftService } from './shared/oesterreichimpft.service';\nimport { HomeComponent } from './home/home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { VaccinedateFormComponent } from './vaccinedate-form/vaccinedate-form.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthenticationService } from './shared/authentication.service';\nimport { TokenInterceptorService } from './shared/token-interceptor.service';\n\n@NgModule({\n  imports:      [ BrowserModule, FormsModule, AppRoutingModule, HttpClientModule, ReactiveFormsModule ],\n  declarations: [ AppComponent, VaccinedateListComponent, VaccinedateListItemComponent, VaccinedateDetailsComponent, HomeComponent, VaccinedateFormComponent, LoginComponent ],\n  bootstrap:    [ AppComponent ],\n  providers:    [ {provide: APP_BASE_HREF, useValue:'/'}, OesterreichimpftService, AuthenticationService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }]\n})\n\nexport class AppModule { }\n","import { Vaccinations } from \"./vaccinations\";\n\nexport class Vaccinedate {\n    constructor(\n        public id: number,\n        public day: Date,\n        public starttime: Date ,\n        public endtime: Date,\n        public maximum_attendees: number,\n        public vaccinations: Vaccinations[]){\n    }\n} \n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\n// import 'core-js/es6/reflect';\n// import 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.","export default \"<div class=\\\"ui container\\\">\\n    <div *ngIf=\\\"!isLoggedIn()\\\">\\n        <h2 class=\\\"ui center aligned icon header\\\">\\n            <i class=\\\"circular key icon\\\"></i>\\n            Login\\n        </h2>\\n        <form class=\\\"ui large form\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n            <div class=\\\"field\\\">\\n                <label>E-Mail</label>\\n                <input type=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\">\\n                <div *ngIf=\\\"loginForm.get('email').invalid &&\\n            (loginForm.get('email').dirty ||\\n            loginForm.get('email').touched) &&\\n            loginForm.get('email').hasError('required')\\\" class=\\\"ui negative message\\\">E-Mail verpflichtend</div>\\n\\n                <div *ngIf=\\\"loginForm.get('email').invalid &&\\n            (loginForm.get('email').dirty ||\\n            loginForm.get('email').touched) &&\\n            loginForm.get('email').hasError('email')\\\" class=\\\"ui negative message\\\">E-Mail Format erforderlich</div>\\n            </div>\\n            <div class=\\\"field\\\">\\n                <label>Passwort</label>\\n                <input type=\\\"password\\\" formControlName=\\\"password\\\">\\n                <div *ngIf=\\\"loginForm.get('password').invalid &&\\n            (loginForm.get('password').dirty ||\\n            loginForm.get('password').touched)\\\" class=\\\"ui negative message\\\">Passwort verpflichtend</div>\\n            </div>\\n\\n            <button type=\\\"submit\\\" class=\\\"ui button\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n        </form>\\n    </div>\\n\\n    <div *ngIf=\\\"isLoggedIn()\\\">\\n        <h2 class=\\\"ui center aligned icon header\\\">\\n            <i class=\\\"circular sign-in alternate icon\\\"></i>\\n            <button type=\\\"button\\\" class=\\\"ui button\\\" (click)=\\\"logout()\\\">Logout</button>\\n        </h2>\\n\\n\\n    </div>\\n</div>\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport jwt_decode from \"jwt-decode\";\n\ninterface Token {\n  exp: number;\n  user: {\n    id: string,\n    is_admin: string\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private api = 'https://oesterreichimpft.s1810456016.student.kwmhgb.at/api/auth';\n\n  constructor(private http: HttpClient) { }\n\n   // asynchronous\n  login(email: string, password: string){\n    return this.http.post(`${this.api}/login`, {\n      email: email,\n      password: password\n    });\n  }\n\n  public setSessionStorage(token: string){\n    console.log(\"storing token\");\n\n    const decodedToken = jwt_decode(token) as Token;\n    sessionStorage.setItem(\"token\", token);\n    sessionStorage.setItem(\"userId\", decodedToken.user.id);\n    sessionStorage.setItem(\"isAdmin\", decodedToken.user.is_admin);\n  }\n\n  public getCurrentUserId(): number {\n    return Number.parseInt(sessionStorage.getItem(\"userId\"));\n  }\n\n  public getInfoIfAdmin(){\n    return Number.parseInt(sessionStorage.getItem(\"isAdmin\"));\n  }\n\n  logout(){\n    this.http.post(`${this.api}/logout`, {});\n    sessionStorage.removeItem(\"token\");\n    sessionStorage.removeItem(\"userId\");\n    sessionStorage.removeItem(\"isAdmin\");\n    console.log(\"logged out\");  \n  }\n\n  public isLoggedIn(){\n    if(sessionStorage.getItem(\"token\")){\n      let token: string = sessionStorage.getItem(\"token\");\n      const decodedToken = jwt_decode(token) as Token;\n      let expirationDate: Date = new Date(0);\n      expirationDate.setUTCSeconds(decodedToken.exp); \n      if(expirationDate < new Date()){\n        console.log(\"token expired\");\n        sessionStorage.removeItem(\"token\");\n        return false; \n      }\n      return true; \n    } else {\n      return false;\n    }\n  }\n\n  public isLoggedOut(){\n    return !this.isLoggedIn();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\";","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { OesterreichimpftService } from '../shared/oesterreichimpft.service';\nimport { Vaccinedate } from \"../shared/vaccinedate\";\n\n@Component({\n  selector: 'vc-vaccinedate-list',\n  templateUrl: './vaccinedate-list.component.html',\n  styleUrls: []\n})\nexport class VaccinedateListComponent implements OnInit {\n\n  vaccinedates: Vaccinedate[];\n\n  constructor(private vc: OesterreichimpftService) { }\n\n  ngOnInit(): void {\n    this.vc.getAllDates().subscribe(res => this.vaccinedates = res);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Vaccinedate } from \"../shared/vaccinedate\";\n\n@Component({\n  selector: 'a.vc-vaccinedate-list-item',\n  templateUrl: './vaccinedate-list-item.component.html',\n  styleUrls: []\n})\nexport class VaccinedateListItemComponent implements OnInit {\n\n  @Input() vaccinedate: Vaccinedate\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Vaccinedate } from \"../shared//vaccinedate\";\nimport { Vaccinelocation } from \"../shared//vaccinelocation\";\nimport { User } from \"../shared/user\";\nimport { OesterreichimpftService } from '../shared/oesterreichimpft.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../shared/authentication.service'\nimport { UserPivot } from '../shared/UserPivot';\n\n@Component({\n  selector: 'vc-vaccinedate-details',\n  templateUrl: './vaccinedate-details.component.html',\n  styleUrls: []\n})\nexport class VaccinedateDetailsComponent implements OnInit {\n\n  vaccinedate: Vaccinedate\n  vaccinelocation: Vaccinelocation\n  vaccineusers: User[]\n  userPivot: UserPivot\n  userHasVaccination: boolean\n\n  constructor(\n    private vc: OesterreichimpftService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthenticationService\n\n  ) { }\n\n  ngOnInit(): void {\n    // Access to parameters in the URL\n    const params = this.route.snapshot.params;\n    this.vc.getSingleDate(params['dateid']).subscribe(res => {\n      this.vaccinedate = res;\n\n      let userTimezoneOffset = this.vaccinedate.starttime.getTimezoneOffset() * 60000;\n      this.vaccinedate.starttime = new Date(this.vaccinedate.starttime.getTime() + userTimezoneOffset);\n      this.vaccinedate.endtime = new Date(this.vaccinedate.endtime.getTime() + userTimezoneOffset);\n    });\n    this.vc.getSingleLocation(params['locid']).subscribe(res => this.vaccinelocation = res);\n    this.vc.getUsersByLocationAndDate(params['dateid'], params['locid']).subscribe(res => {\n      this.vaccineusers = res;\n      this.userHasVaccination = this.checkUser();\n      console.log(this.vaccineusers);\n    });\n    \n\n  }\n\n  // check if registration is full (maximum number of attendees for vaccination is reached)\n  checkAttendees() {\n    if (this.vaccineusers && this.vaccineusers.length == this.vaccinedate.maximum_attendees) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // check if current logged in user is already registered to a vaccination --> if true show message\n  checkUser() {\n    if (this.vaccineusers) {\n      for (var vaccineuser of this.vaccineusers) {\n        if (vaccineuser.id == this.authService.getCurrentUserId()) {\n          return true;\n        }\n      }\n    }\n  }\n\n  // check if checkbox is checked so user vaccination is administered or not\n  checkValue(vaccineuser: User){\n    if (vaccineuser.pivot.vaccination_administered === 0) \n      vaccineuser.pivot.vaccination_administered = 1;\n    else \n      vaccineuser.pivot.vaccination_administered = 0;\n    \n    this.vc.vaccinationAdministered(vaccineuser).subscribe();\n  }\n\n  // remove vaccinedate \n  removeVaccinedate() {\n    if (confirm('Wollen Sie diesen Termin wirklich löschen?')) {\n      this.vc.removeDate(this.vaccinedate.id)\n        .subscribe(res => this.router.navigate(['../../'], { relativeTo: this.route }));\n    }\n  }\n\n  // register user to vaccination if logged in, otherwise return message\n  registerVaccination() {\n    if (this.authService.isLoggedOut()) {\n      alert('Sie müssen sich anmelden um einen Termin zu buchen!');\n    } else {\n      const userId = this.authService.getCurrentUserId();\n      const userPivot = new UserPivot(this.vaccinedate.vaccinations[0].id, userId, null);\n      this.vc.registerToVaccination(userPivot).subscribe(res => this.userPivot = res);\n      this.userHasVaccination = true;\n      alert('Sie wurden zu diesem Termin angemeldet!');\n    }\n  }\n}\n","export class UserPivot {\n    constructor(\n        public vaccination_id: number,\n        public user_id: number,\n        public vaccination_administered: number){\n    \n    }\n}\n","// Routen Konfigurationsfile\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VaccinedateDetailsComponent } from './vaccinedate-details/vaccinedate-details.component';\nimport { VaccinedateListComponent } from './vaccinedate-list/vaccinedate-list.component';\nimport { HomeComponent } from './home/home.component';\nimport { VaccinedateFormComponent } from './vaccinedate-form/vaccinedate-form.component';\nimport { LoginComponent } from './login/login.component';\n\n\n// Welche Adresse mappt auf welche Component?\nconst routes: Routes = [\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent },\n    { path: 'vaccinedates', component: VaccinedateListComponent },\n    { path: 'vaccinedates/:dateid/:locid', component: VaccinedateDetailsComponent }, \n    { path: 'admin', component: VaccinedateFormComponent },\n    { path: 'admin/:dateid/:locid', component: VaccinedateFormComponent },\n    { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n    providers: []\n})\n\nexport class AppRoutingModule {\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../shared/authentication.service';\n\ninterface Response {\n  access_token: string;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n\n  constructor(\n    private vc: FormBuilder,\n    private router: Router,\n    private authService : AuthenticationService\n  ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.vc.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", Validators.required]\n    })\n  }\n\n  login(){\n    const val = this.loginForm.value;\n    if(val.email && val.password){\n      // login \n      this.authService.login(val.email, val.password).subscribe(res => {\n        // console.log(res);\n        this.authService.setSessionStorage(\n          (res as Response).access_token)\n      });\n    }\n  }\n\n  isLoggedIn(){\n    return this.authService.isLoggedIn();\n  }\n\n  logout(){\n    return this.authService.logout();\n  }\n\n}\n","export default \"<div class=\\\"ui container\\\">\\n    <div class=\\\"ui middle aligned animated list\\\">\\n        <h2 class=\\\"ui header\\\" style=\\\"margin-top: 1em; margin-bottom: 1em;\\\">\\n            <i class=\\\"calendar alternate icon\\\"></i>\\n            Impftermine\\n        </h2>\\n        <a *ngFor=\\\"let vaccinedate of vaccinedates\\\" class=\\\"item vc-vaccinedate-list-item\\\" style=\\\"margin-top: 1em;\\\" [vaccinedate]=\\\"vaccinedate\\\"\\n            [routerLink]=\\\"['/vaccinedates', vaccinedate.vaccinedate_id, vaccinedate.vaccinelocation_id]\\\">\\n        </a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"ui container\\\" *ngIf=\\\"vaccinedate && vaccinelocation\\\">\\n    <h2 style=\\\"margin-top: 1em; margin-bottom: 1em;\\\">Impfdetails</h2>\\n    <div class=\\\"ui container\\\">\\n        <div *ngIf=\\\"userHasVaccination && authService.isLoggedIn() && authService.getInfoIfAdmin() == '0'\\\"\\n            class=\\\"ui positive message\\\">\\n            <div class=\\\"header\\\">\\n                Wichtige Information!\\n            </div>\\n            <p>Du bist bereits zu dieser Impfung angemeldet.</p>\\n        </div>\\n        <h4 class=\\\"ui header\\\">\\n            <i class=\\\"calendar alternate icon\\\"></i>\\n            <div class=\\\"content\\\">\\n                Impftag\\n                <div class=\\\"sub header\\\">{{ vaccinedate.day | date:'dd.MM.yyyy' }}</div>\\n            </div>\\n        </h4>\\n        <h4 class=\\\"ui header\\\">\\n            <i class=\\\"clock icon\\\"></i>\\n            <div class=\\\"content\\\">\\n                Impfzeitraum\\n                <div class=\\\"sub header\\\">{{ vaccinedate.starttime | date:'HH:mm' }} - {{ vaccinedate.endtime |\\n                    date:'HH:mm' }} Uhr</div>\\n            </div>\\n        </h4>\\n        <h4 class=\\\"ui header\\\">\\n            <i class=\\\"map pin icon\\\"></i>\\n            <div class=\\\"content\\\">\\n                Impfort\\n                <div class=\\\"sub header\\\">{{ vaccinelocation.city }}, {{ vaccinelocation.description }}</div>\\n            </div>\\n        </h4>\\n\\n        <h4 *ngIf=\\\"authService.isLoggedIn() && authService.getInfoIfAdmin() == '1'\\\" class=\\\"ui header\\\">\\n            <i class=\\\"user outline icon\\\"></i>\\n            <div class=\\\"content\\\">\\n                Maximale Teilnehmeranzahl\\n                <div class=\\\"sub header\\\">{{ vaccinedate.maximum_attendees }} Personen</div>\\n                <div class=\\\"sub header\\\" *ngIf=\\\"vaccineusers\\\">{{ vaccineusers.length }}\\n                    Person(en) sind bereits angemeldet</div>\\n            </div>\\n        </h4>\\n\\n        <div *ngIf=\\\"authService.isLoggedIn() && authService.getInfoIfAdmin() == '1'\\\">\\n            <h2>Angemeldete Personen</h2>\\n            <div *ngFor=\\\"let vaccineuser of vaccineusers\\\">\\n                <h4 class=\\\"ui header\\\">\\n                    <i class=\\\"male icon\\\"></i>\\n                    <div class=\\\"content\\\">\\n                        Name\\n                        <div class=\\\"sub header\\\">{{ vaccineuser.firstname }} {{ vaccineuser.lastname }}</div>\\n                        <div class=\\\"sub header\\\">Impfung verabreicht?\\n                            <input value=\\\"name\\\" type=\\\"checkbox\\\" [checked]=\\\"vaccineuser.pivot.vaccination_administered\\\"\\n                            (change)=\\\"checkValue(vaccineuser)\\\" >\\n                        </div>\\n                    </div>\\n                </h4>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div style=\\\"margin-top: 2em;\\\">\\n        <button [routerLink]=\\\"'/vaccinedates'\\\" class=\\\"ui basic button\\\"><i class=\\\"icon list\\\"></i>Zu der\\n            Terminliste\\n        </button>\\n\\n        <button *ngIf=\\\"authService.isLoggedIn() && authService.getInfoIfAdmin() == '0' || authService.isLoggedOut()\\\"\\n            class=\\\"ui basic button\\\" (click)=\\\"registerVaccination()\\\" [disabled]=\\\"checkAttendees() || userHasVaccination\\\">\\n            <i class=\\\"write icon\\\"></i>Zum Termin anmelden\\n        </button>\\n\\n        <button *ngIf=\\\"authService.isLoggedIn() && authService.getInfoIfAdmin() == '1'\\\" class=\\\"ui red basic button\\\"\\n            (click)=\\\"removeVaccinedate()\\\">\\n            <i class=\\\"remove icon\\\"></i>Termin löschen\\n        </button>\\n\\n\\n        <a *ngIf=\\\"authService.isLoggedIn() && authService.getInfoIfAdmin() == '1'\\\" class=\\\"ui yellow basic button\\\"\\n            [routerLink]=\\\"['../../../admin', vaccinedate?.id, vaccinelocation?.id]\\\">\\n            <i class=\\\"write icon\\\"></i>Termin bearbeiten\\n        </a>\\n\\n    </div>\\n\\n</div>\";","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  // Otherwise, log the boot error\n}).catch(err => console.error(err));"],"sourceRoot":"webpack:///"}